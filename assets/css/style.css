/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"RedHatDisplayRegular";
  src:url("fonts/RedHatDisplayRegular.eot");
  src:url("fonts/RedHatDisplayRegular.eot") format("embedded-opentype"), url("fonts/RedHatDisplayRegular.woff2") format("woff2"), url("fonts/RedHatDisplayRegular.woff") format("woff"), url("fonts/RedHatDisplayRegular.ttf") format("truetype");
  font-weight:400;
  font-style:normal;
}
@font-face{
  font-family:"RedHatDisplayMedium";
  src:url("fonts/RedHatDisplayMedium.eot");
  src:url("fonts/RedHatDisplayMedium.eot") format("embedded-opentype"), url("fonts/RedHatDisplayMedium.woff2") format("woff2"), url("fonts/RedHatDisplayMedium.woff") format("woff"), url("fonts/RedHatDisplayMedium.ttf") format("truetype");
  font-weight:500;
  font-style:normal;
}
@font-face{
  font-family:"RedHatDisplaySemiBold";
  src:url("fonts/RedHatDisplaySemiBold.eot");
  src:url("fonts/RedHatDisplaySemiBold.eot") format("embedded-opentype"), url("fonts/RedHatDisplaySemiBold.woff2") format("woff2"), url("fonts/RedHatDisplaySemiBold.woff") format("woff"), url("fonts/RedHatDisplaySemiBold.ttf") format("truetype");
  font-weight:600;
  font-style:normal;
}
@font-face{
  font-family:"RedHatDisplayBold";
  src:url("fonts/RedHatDisplayBold.eot");
  src:url("fonts/RedHatDisplayBold.eot") format("embedded-opentype"), url("fonts/RedHatDisplayBold.woff2") format("woff2"), url("fonts/RedHatDisplayBold.woff") format("woff"), url("fonts/RedHatDisplayBold.ttf") format("truetype");
  font-weight:700;
  font-style:normal;
}
*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  font-size:16px;
}

body{
  font-family:"Red Hat Display", sans-serif;
  font-size:16px;
  background-color:#1E1E1E;
}

a{
  text-decoration:none;
  color:#000000;
}

h1{
  text-align:center;
}

.container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}
.container__first{
  display:flex;
  justify-content:flex-start;
  flex-direction:row;
  column-gap:15px;
}
.container__second{
  display:flex;
  justify-content:flex-start;
  flex-direction:row;
  column-gap:15px;
}
.container__third{
  display:flex;
  justify-content:flex-start;
  flex-wrap:wrap;
  column-gap:15px;
  row-gap:20px;
}

.btn{
  border-width:1px;
  border-style:solid;
  text-align:center;
}
.btn--dark{
  position:fixed;
  top:10px;
  right:10px;
  z-index:999;
  width:35px;
  height:35px;
  background-color:#1E1E1E;
  border:1px solid #ffffff;
  border-radius:20%;
  transition-duration:1s;
  cursor:pointer;
}
.btn--dark:hover{
  background-color:#5E5A5A;
}
.btn--card{
  width:32px;
  height:32px;
  background-color:transparent;
  border:transparent;
  border-radius:20%;
}

.badge{
  display:inline-block;
  text-align:center;
  border-radius:0.375rem;
}
.badge__header{
  padding:4px 7px;
  background-color:#2469a6;
  position:relative;
  top:7px;
  width:44px;
  height:22px;
  font-weight:700;
  font-size:10px;
  line-height:13px;
  color:#ffffff;
}

.divider{
  width:100%;
  height:2px;
  border:transparent;
  background:#545151;
  border-radius:8px;
}

.sup{
  font-weight:700;
  font-size:9px;
  line-height:12px;
}
.sup-circle{
  font-weight:700;
  font-size:9px;
  line-height:12px;
  display:flex;
  text-align:center;
  margin-left:0px;
  margin-bottom:17px;
  color:#FFFFFF;
  width:16px;
  padding:2px;
  height:16px;
  background-color:#3FAF6F;
  border-radius:100%;
  border:1px solid #3FAF6F;
  align-items:center;
}
.sup-circle:first-child{
  margin-left:0;
}
.sup-white{
  font-weight:400;
  font-size:10px;
  line-height:13px;
  color:#FFFFFF;
}
.sup-gray{
  font-weight:400;
  font-size:10px;
  line-height:13px;
  color:#5E5A5A;
}

.progress-bar{
  width:209px;
  height:2px;
  overflow:hidden;
  background:#5E5A5A;
  border-radius:2px;
}
.progress-bar__complete{
  width:99.86px;
  height:2px;
  background:#69F0A8;
}

.background{
  background-color:rgba(255, 72, 88, 0.15);
}
.background-second{
  background-color:rgba(242, 135, 5, 0.15);
}

.drop{
  position:relative;
  display:none;
}

.form__btn--img{
  position:fixed;
  top:10px;
  right:10px;
  z-index:999;
  width:35px;
  height:35px;
}

.headers{
  display:flex;
  margin-top:43px;
  margin-bottom:18px;
  align-items:center;
  justify-content:flex-start;
}

.headers-main{
  font-size:20px;
  line-height:26px;
  color:#DDD4D4;
}

.card{
  background-color:#181A1D;
  border-radius:8px;
}
.card-sm{
  max-width:310px;
}

.column{
  background-color:transparent;
  display:flex;
  flex-grow:1;
  max-width:332px;
  flex-direction:column;
  flex-wrap:wrap;
  align-items:center;
}
.column__second{
  background-color:transparent;
  display:flex;
  flex-grow:1;
  max-width:332px;
  flex-direction:column;
  flex-wrap:wrap;
  align-items:center;
}
.column__third{
  max-width:310px;
  background-color:transparent;
  display:flex;
  flex-grow:1;
  flex-direction:column;
  flex-wrap:wrap;
  align-items:center;
}

.card-header{
  display:grid;
  grid-template-areas:"ttl btn" "dsc btn";
  justify-content:space-between;
  padding:8px 8px;
  width:332px;
}
.card-header--sm{
  width:310px;
  padding:8px 8px;
}
.card-header__sup{
  margin-left:26px;
}
.card-header__btn{
  width:32px;
  height:32px;
  grid-area:btn;
  display:flex;
  flex-direction:row;
  align-items:center;
  justify-content:center;
  padding:4px 5px;
  position:relative;
}
.card-header__btn--img{
  position:absolute;
  width:16px;
  height:16px;
}
.card-header__title{
  grid-area:ttl;
  font-weight:600;
  font-size:16px;
  line-height:21px;
  color:#DDD4D4;
  padding-bottom:4px;
}
.card-header__description{
  grid-area:dsc;
  font-weight:700;
  font-size:11px;
  line-height:15px;
  color:#DDD4D4;
}

.card-body{
  width:332px;
  padding:5px 8px;
}
.card-body--sm{
  width:310px;
  padding:12px 9px;
}

.subtitle{
  display:flex;
  flex-direction:row;
  justify-content:space-between;
  padding:8px 8px;
  padding-bottom:3px;
}
.subtitle__title{
  font-weight:400;
  font-size:14px;
  line-height:19px;
  margin:0;
  color:#FF4858;
}
.subtitle__badge{
  width:44px;
  height:22px;
  background-color:#0D0D0D;
  color:#8A8181;
  padding:4px 7px;
  font-weight:600;
  font-size:10px;
  line-height:13px;
}

.subtitle-first{
  display:flex;
  flex-direction:row;
  justify-content:space-between;
  padding:7px 8px;
  padding-bottom:3px;
}
.subtitle-first__title:hover{
  transition:1s;
}
.subtitle-first__text{
  padding:2px;
  display:flex;
  align-items:center;
  font-weight:400;
  font-size:14px;
  line-height:19px;
  margin:0;
  color:#FF4858;
}
.subtitle-first__text-light{
  padding:2px;
  display:flex;
  align-items:center;
  font-weight:400;
  font-size:14px;
  line-height:19px;
  margin:0;
  color:#ddd4d4;
}
.subtitle-first__text-light:hover{
  background-color:#0c0e12;
  border-radius:4px;
  transition:1s;
}
.subtitle-first__text:hover{
  background-color:#0c0e12;
  border-radius:4px;
  transition:1s;
}
.subtitle-first__badge{
  width:44px;
  height:22px;
  background-color:#0D0D0D;
  color:#8A8181;
  padding:4px 7px;
  font-weight:600;
  font-size:10px;
  line-height:13px;
}

.subtitle-second{
  display:flex;
  flex-direction:row;
  justify-content:space-between;
  padding:15px 8px;
  padding-bottom:3px;
}
.subtitle-second__title{
  font-weight:400;
  font-size:14px;
  line-height:19px;
  margin:0;
  color:#ddd4d4;
}
.subtitle-second__badge{
  width:44px;
  height:22px;
  background-color:#0D0D0D;
  color:#8A8181;
  padding:4px 7px;
  font-weight:600;
  font-size:10px;
  line-height:13px;
}

.subtitle-third{
  display:flex;
  flex-direction:row;
  justify-content:space-between;
  padding:20px 8px;
  padding-bottom:3px;
}
.subtitle-third__title{
  font-weight:400;
  font-size:14px;
  line-height:19px;
  margin:0;
  color:#ddd4d4;
}
.subtitle-third__badge{
  width:44px;
  height:22px;
  background-color:#0D0D0D;
  color:#8A8181;
  padding:4px 7px;
  font-weight:600;
  font-size:10px;
  line-height:13px;
}

.subtitle-first__title:hover .drop{
  display:block;
  transition:1s;
}

.content{
  display:flex;
  flex-direction:column;
  row-gap:10px;
}
.content__task{
  width:316px;
  min-height:37px;
  column-gap:2px;
  display:flex;
  flex-direction:row;
  flex-wrap:wrap;
  align-items:center;
  padding:3px 2px;
}
.content__task--sm{
  width:300px;
  min-height:37px;
}
.content__task--img:first-child{
  height:15px;
}
.content__task--img{
  width:14px;
  height:14px;
}
.content__task--description{
  font-weight:400;
  font-size:14px;
  line-height:19px;
  max-width:225px;
  color:#ffffff;
  overflow:hidden;
}
.content__task--badge{
  width:36px;
  height:18px;
  margin-left:18px;
  margin-top:6px;
  background-color:rgba(206, 36, 51, 0.5);
  border-radius:4px;
  padding:2px 6px;
  font-weight:500;
  font-size:10px;
  line-height:13px;
  color:#ffffff;
}
.content__task--badge-sec{
  width:36px;
  height:18px;
  margin-left:50px;
  margin-top:6px;
  background-color:rgba(172, 100, 11, 0.5);
  border-radius:4px;
  padding:2px 6px;
  font-weight:500;
  font-size:10px;
  line-height:13px;
  color:#ffffff;
}
.content__task--badge-third{
  width:36px;
  height:18px;
  margin-left:50px;
  margin-top:6px;
  background-color:#0c0e12;
  border-radius:4px;
  padding:2px 6px;
  font-weight:500;
  font-size:10px;
  line-height:13px;
  color:#8a8181;
}
#content-red:hover{
  background-color:rgba(206, 36, 51, 0.5);
  border-radius:4px;
  transition:1s;
}

#content-yellow:hover{
  background-color:rgba(172, 100, 11, 0.5);
  border-radius:4px;
  transition:1s;
}

#content-black:hover{
  background-color:#0c0e12;
  border-radius:4px;
  transition:1s;
}

.changelog__btn{
  position:relative;
  width:32px;
  display:flex;
  padding:4px 5px;
  height:32px;
  cursor:pointer;
  align-items:center;
  justify-content:center;
}
.changelog__btn:hover{
  border-radius:20%;
  border:1px solid #181A1D;
  background-color:black;
}
.changelog__sup{
  position:relative;
  margin-left:20px;
  margin-top:-33px;
  margin-bottom:0;
}
.changelog__content{
  font-size:18px;
  margin:0;
  padding:0;
  list-style:none;
  display:none;
  position:fixed;
  top:0;
  z-index:1;
  right:0px;
  width:400px;
  height:100vh;
  padding:20px;
  background-color:#181A1D;
  box-shadow:-10px 0 15px rgba(24, 26, 29, 0.12);
  overflow:hidden;
}
.changelog__content.active{
  display:block;
  z-index:100;
  position:fixed;
  right:0px;
}
.changelog__subtitle{
  display:block;
  font-weight:600;
  font-size:14px;
  line-height:19px;
  color:#5E5A5A;
}
.changelog__subtitle.active{
  color:#FF4858;
}
.changelog__contents{
  display:flex;
  flex-direction:row;
  gap:15px;
  align-items:center;
  max-width:328px;
  margin-top:20px;
}

.text{
  max-width:270px;
  display:flex;
  flex-direction:column;
  align-items:flex-start;
  gap:5px;
}
.text__subheader{
  display:flex;
  flex-direction:row;
  gap:15px;
  align-items:center;
}
.text__subheader--name{
  font-weight:400;
  font-size:14px;
  line-height:19px;
  color:#FFFFFF;
}
.text__subheader--time{
  font-weight:400;
  font-size:10px;
  line-height:13px;
  color:#5E5A5A;
}
.text__task{
  column-gap:2px;
  display:flex;
  flex-direction:row;
  flex-wrap:wrap;
  align-items:center;
  max-width:270px;
}
.text__task--img:first-child{
  height:15px;
}
.text__task--img{
  width:14px;
  height:14px;
}
.text__task--description{
  font-weight:400;
  font-size:14px;
  line-height:19px;
  max-width:225px;
  color:#ffffff;
  overflow:hidden;
}
.text__changes{
  display:flex;
  justify-content:flex-start;
  flex-direction:row;
  gap:7px;
}
.text__changes--changed{
  font-weight:500;
  font-size:12px;
  line-height:16px;
  color:#FFFFFF;
}
.text__changes--modification{
  font-weight:500;
  font-size:12px;
  line-height:16px;
  color:#FFFFFF;
}
@media (max-width: 1199.8px){
  .container__first{
    flex-wrap:wrap;
    row-gap:20px;
  }
  .container__second{
    flex-wrap:wrap;
    row-gap:20px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */